# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.13
target-version = "py313"

[lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["ALL"]
ignore = [
    "D104", # Missing docstring in public package
    "INP001", # File is part of an implicit namespace package. Add an `__init__.py`.
    "B008", # Interferes with FastAPI dependency injection

    "COM812",  # missing-trailing-comma
    "CPY001",  # Missing copyright notice at top of file
    "D100",    # Missing docstring in public module
    "D104",    # Missing docstring in public package
    "D203",    # blank line required before class docstring
    "D211",    # no-blank-line-before-class
    "D213",    # multi-line-summary-second-line
    "EM101",   # raw-string-in-exception
    "FIX002",  # line-contains-todo
    "ISC001",  # Conflicts with formatter ruff
    "PLR0904", # Too many public methods (... > 20)
    "TD002",   # Missing author in TODO `# TODO(<author_name>): ...`
    "TD003",   # missing-todo-link
    "TRY003",  # raise-vanilla-args
]

[lint.per-file-ignores]
"test*" = ["S101"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"
